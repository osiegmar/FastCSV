<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">

    <property name="charset" value="UTF-8"/>
    <property name="severity" value="error"/>
    <!--<property name="fileExtensions" value="java, properties, xml"/>-->

    <property name="cacheFile" value="${config_loc}/../../build/checkstyle-cachefile"/>

    <!-- Checks for Javadoc - http://checkstyle.sf.net/config_javadoc.html -->
    <!--<module name="JavadocPackage"/>-->

    <!-- Checks for Misc - http://checkstyle.sf.net/config_misc.html -->
    <module name="NewlineAtEndOfFile">
        <property name="lineSeparator" value="lf"/>
    </module>

    <!-- Checks for Misc - http://checkstyle.sf.net/config_misc.html -->
    <module name="Translation"/>
    <module name="UniqueProperties"/>

    <!-- Checks for Size Violations - http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength"/>

    <!-- Checks for Whitespaces - http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true"/>
    </module>


    <!-- Custom Checks -->
    <!-- Checks for Regexps - http://checkstyle.sf.net/config_regexp.html -->

    <module name="RegexpSingleline">
        <property name="format" value="\s$"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>

    <module name="RegexpMultiline">
        <property name="format" value="System\.(out)|(err)\.print(ln)?\("/>
        <property name="message" value="System.out/err. should be replaced with logger debugging."/>
    </module>

    <module name="RegexpMultiline">
        <property name="format" value="System\.exit\("/>
        <property name="message" value="Not permitted to call System.exit()"/>
    </module>

    <module name="RegexpMultiline">
        <property name="format" value="\.printStackTrace\(\s*\)"/>
        <property name="message" value="printStackTrace directs output to the console and should be replaced with logger debugging."/>
    </module>

    <module name="SuppressionFilter">
        <property name="file" value="${config_loc}/suppressions.xml"/>
    </module>

    <module name="SuppressWarningsFilter"/>

    <!-- Checks for Header - http://checkstyle.sf.net/config_header.html -->
    <module name="Header">
        <property name="headerFile" value="${config_loc}/java.header"/>
        <property name="fileExtensions" value="java"/>
        <property name="ignoreLines" value="2"/>
    </module>

    <module name="LineLength">
        <property name="max" value="100"/>
        <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
    </module>

    <module name="TreeWalker">

        <property name="tabWidth" value="4"/>

        <!-- Checks for Annotations - See http://checkstyle.sf.net/config_annotation.html -->
        <module name="AnnotationUseStyle"/>
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>
        <!--<module name="PackageAnnotation"/>-->
        <module name="SuppressWarnings"/>
        <module name="SuppressWarningsHolder"/>
        <!--<module name="AnnotationLocation"/>-->

        <!-- Checks for Blocks - See http://checkstyle.sf.net/config_blocks.html -->
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>
        <!--<module name="EmptyCatchBlock">-->
            <!--<property name="exceptionVariableName" value="expected"/>-->
        <!--</module>-->
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>
        <module name="RightCurly">
            <property name="option" value="alone"/>
            <property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT"/>
        </module>
        <module name="AvoidNestedBlocks"/>

        <!-- Checks for Class Design - http://checkstyle.sf.net/config_design.html -->
        <module name="VisibilityModifier"/>
        <module name="FinalClass"/>
        <module name="InterfaceIsType"/>
        <module name="HideUtilityClassConstructor"/>
        <!--<module name="DesignForExtension"/>-->
        <module name="MutableException"/>
        <module name="ThrowsCount">
            <property name="max" value="4"/>
        </module>
        <module name="InnerTypeLast"/>
        <module name="OneTopLevelClass"/>

        <!-- Checks for Coding - http://checkstyle.sf.net/config_coding.html -->
        <module name="ArrayTrailingComma"/>
        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="FinalLocalVariable"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
            <!--<property name="setterCanReturnItsClass" value="true"/>-->
        </module>
        <module name="IllegalInstantiation">
            <property name="classes" value="java.lang.Boolean"/>
        </module>
        <module name="IllegalToken">
            <property name="tokens" value="LITERAL_NATIVE,LITERAL_ASSERT"/>
        </module>
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format" value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
        </module>
        <module name="InnerAssignment"/>
        <module name="MagicNumber">
            <property name="ignoreAnnotation" value="true"/>
        </module>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="NestedForDepth"/>
        <module name="NestedIfDepth"/>
        <module name="NestedTryDepth"/>
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="IllegalCatch"/>
        <module name="IllegalThrows"/>
        <module name="PackageDeclaration"/>
        <module name="ReturnCount">
            <property name="max" value="3"/>
            <property name="maxForVoid" value="3"/>
        </module>
        <module name="IllegalType"/>
        <module name="DeclarationOrder"/>
        <module name="ParameterAssignment"/>
        <module name="ExplicitInitialization"/>
        <module name="DefaultComesLast"/>
        <!--<module name="MissingCtor"/>-->
        <module name="FallThrough"/>
<!--         <module name="MultipleStringLiterals"/> -->
        <module name="MultipleVariableDeclarations"/>
        <!--<module name="RequireThis"/>-->
        <module name="UnnecessaryParentheses"/>
        <module name="OneStatementPerLine"/>
        <module name="VariableDeclarationUsageDistance"/>
        <module name="OverloadMethodsDeclarationOrder"/>


        <!-- Checks for Imports - http://checkstyle.sf.net/config_imports.html -->
        <module name="AvoidStarImport"/>
        <!--<module name="AvoidStaticImport"/>-->
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>
        <module name="ImportOrder">
            <property name="groups" value="/^java\./,javax,org,com"/>
            <property name="ordered" value="true"/>
            <property name="separated" value="true"/>
            <property name="option" value="top"/>
        </module>
        <!--<module name="CustomImportOrder"/>-->

        <!-- Checks for Javadoc - http://checkstyle.sf.net/config_javadoc.html -->
        <!--<module name="JavadocType"/>-->
        <!--<module name="JavadocMethod"/>-->
        <!--<module name="JavadocVariable"/>-->
        <module name="JavadocStyle"/>
        <!--<module name="WriteTag"/>-->
        <!--<module name="NonEmptyAtclauseDescription"/>-->
        <!--<module name="JavadocTagContinuationIndentation"/>-->
        <!--<module name="SummaryJavadoc"/>-->
        <!--<module name="AtclauseOrder"/>-->
        <!--<module name="JavadocParagraph"/>-->
        <!--<module name="SingleLineJavadoc"/>-->

        <!-- Checks for Metrics - http://checkstyle.sf.net/config_metrics.html -->
        <module name="BooleanExpressionComplexity"/>
        <module name="ClassDataAbstractionCoupling"/>
        <module name="ClassFanOutComplexity"/>
        <module name="CyclomaticComplexity"/>
        <module name="NPathComplexity"/>
        <module name="JavaNCSS"/>

        <!-- Checks for Misc - http://checkstyle.sf.net/config_misc.html -->
        <module name="TodoComment">
            <property name="format" value="(TODO)|(FIXME)"/>
        </module>
        <module name="UncommentedMain"/>
        <module name="UpperEll"/>
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters"/>
        <module name="DescendantToken"/>
        <module name="Indentation">
        </module>
        <module name="TrailingComment"/>
        <module name="OuterTypeFilename"/>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>

        <!-- Checks for Modifiers - http://checkstyle.sf.net/config_modifier.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for Naming Conventions - http://checkstyle.sf.net/config_naming.html -->
        <module name="AbstractClassName"/>
        <module name="ClassTypeParameterName">
        	<property name="format" value="^[A-Z][A-Z]?$"/>
        </module>
        <module name="MethodTypeParameterName">
        	<property name="format" value="^[A-Z][A-Z]?$"/>
        </module>
        <module name="InterfaceTypeParameterName">
        	<property name="format" value="^[A-Z][A-Z]?$"/>
        </module>
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for Size Violations - http://checkstyle.sf.net/config_sizes.html -->
        <module name="ExecutableStatementCount"/>
        <module name="MethodLength"/>
        <module name="AnonInnerLength"/>
        <module name="ParameterNumber"/>
        <module name="OuterTypeNumber"/>
        <module name="MethodCount"/>

        <!-- Checks for Whitespaces - http://checkstyle.sf.net/config_whitespace.html -->
        <module name="GenericWhitespace"/>
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>
        <module name="NoLineWrap"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>

    </module>

</module>
